package main

import (
	"fmt"
	"strings"
)

/*
	Дана последовательность температурных колебаний:
	-25.4, -27.0, 13.0, 19.0, 15.5, 24.5, -21.0, 32.5.
	Объединить данные значения в группы с шагом в 10 градусов.
	Последовательность в подмножноствах не важна.

	Пример: -20:{-25.0, -27.0, -21.0}, 10:{13.0, 19.0, 15.5}, 20: {24.5}, etc.
*/

func temperatureStep(arr []float32) map[int][]float32 {
	/*
		Создаем пустую карту, ключ - значение целочисленного типа,
		значение - слайс чисел с плавающей точкой
		float32 использую, потому что не нужна слишком большая точность как в float64
	*/
	tempMap := make(map[int][]float32)

	// Проходим по каждому элементу массива
	for _, elem := range arr {
		/*
			Преобразуем число с плавающей точкой в целочисленное число,
			округляя до ближайшей десятки в меньшую сторону.
			Это будет ключом карты
		*/
		key := int(elem) / 10 * 10

		/*
			Добавляем элемент в соответствующий слайс в карту по ключу key
			Если для соответствующего ключа key еще нет массива, то он создастся
		*/
		tempMap[key] = append(tempMap[key], elem)
	}

	return tempMap // Возвращаем карту
}

// Для вывода как в примере
func likeExample(tempMap map[int][]float32) string {
	// инициализируем переменную output со значением "{"
	output := "{"

	// С помощью цикла проходим по карте получая ключ и соответствующее значение в каждой итерации
	for key, values := range tempMap {
		// Создаем слайс строк с длинной равной длине слайса values
		valueStrings := make([]string, len(values))
		// С помощью цикла заполняем слайс valueStrings
		for i, value := range values {
			/*
				Используем форматированную запись
				для преобразования чисел с плавающей точкой
				в строки с одной десятичной цифрой после запятой
			*/
			valueStrings[i] = fmt.Sprintf("%.1f", value)
		}

		// Добавляем значения в переменную output.
		// Используем strings.Join для объединения элементов в valueStrings с разделителем ", "
		output += fmt.Sprintf("%d: {%s}, ", key, strings.Join(valueStrings, ", "))
	}

	output = strings.TrimSuffix(output, ", ") // Удаляем последнюю запятую
	output += "}"                             // Добавляем "}" в переменную output

	return output // возвращаем результат
}

func main() {
	temp := []float32{-25.4, -27.0, 13.0, 19.0, 15.5, 24.5, -21.0, 32.5}
	tempStep := temperatureStep(temp)
	fmt.Println(likeExample(tempStep))
}

package main

import "fmt"

// Реализовать бинарный поиск встроенными методами языка.

// Бинарный поиск возможен только в отсортированном массиве

/*
	Бинарный поиск рекурсивно делит массив пополам и выполняет
	поиск требуемого элемента в подходящей половине массива
	до тех пор пока искомый элемент не будет найден или до тех
	пор, пока не выполнится базовый случай
*/

func binarySearch(arr []int, target int) bool {
	low := 0             // Нижний порог
	high := len(arr) - 1 // Верхний порог

	for low <= high {
		mid := (low + high) / 2 // Середина массива
		switch {
		case arr[mid] < target: // Если средний элемент меньше искомого
			low = mid + 1 // Присваиваем нижнему порогу индекс элемента после среднего
		default: // В другом случае
			high = mid - 1 // Присваиваем верхнему порогу индекс элемента до среднего
		}
	}

	// Если элемент не найден возвращаем false
	if low == len(arr) || arr[low] != target {
		return false
	}

	return true // Возвращаем true элемент найден
}

func main() {
	arr := []int{1, 2, 3, 4, 5, 6, 7, 8}
	fmt.Println(binarySearch(arr, 7))
}
